<Window x:Class="DBRuntimeMonitor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DBRuntimeMonitor"
        ResizeMode="CanResizeWithGrip"
        mc:Ignorable="d"  Foreground="{DynamicResource Window.Forground}" Background="Transparent" AllowsTransparency="True" WindowStyle="None" 
        Title="{local:ResMarker Title}" Height="620" Width="1024" WindowState="Normal" WindowStartupLocation="CenterScreen"  Icon="/Image/mrdbm.ico">
    <Window.Resources>
        <local:IndexConverter x:Key="ic" />
        <BooleanToVisibilityConverter x:Key="btv" />
        <local:BoolInvertToVisiableConvert x:Key="bivc" />
        <local:DoubleFormateConvert x:Key="dfc" />
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource Window.Forground}" />

            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <Rectangle Visibility="Hidden" x:Name="vb" Fill="#2F000000" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1FFFFFFF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3FFFFFFF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Visibility" TargetName="vb" Value="Visible" />-->
                                <Setter Property="Opacity" Value="0.5" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Visibility" TargetName="vb" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="WaitAnimate" RepeatBehavior="Forever">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="180"/>
                <EasingDoubleKeyFrame KeyTime="00:00:04" Value="360"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="bg" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="00:00:00" Value="#CF26282C">
                    <!--<EasingColorKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseOut"/>
                    </EasingColorKeyFrame.EasingFunction>-->
                </EasingColorKeyFrame>
                <EasingColorKeyFrame KeyTime="00:00:02" Value="#0126282C">
                    <EasingColorKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseOut"/>
                    </EasingColorKeyFrame.EasingFunction>
                </EasingColorKeyFrame>
                <EasingColorKeyFrame KeyTime="00:00:04" Value="#CF26282C">
                    <EasingColorKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseIn"/>
                    </EasingColorKeyFrame.EasingFunction>
                </EasingColorKeyFrame>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Border x:Name="bd"  BorderThickness="0"  BorderBrush="DarkGray" CornerRadius="5">
        <Border.Background>
            <ImageBrush x:Name="bgi" ImageSource="/Image/huoxing.jpg" Opacity="0.8" Stretch="Fill" TileMode="None"/>
        </Border.Background>

        <Grid x:Name="bg" >
            <Grid.Background>
                <RadialGradientBrush RadiusX="1" RadiusY="1" Center="0.5,0.5" GradientOrigin="0.5,0.1">
                    <RadialGradientBrush.GradientStops>
                        <GradientStop Color="#7F000000" Offset="0" />
                        <GradientStop Color="#01000000" Offset="1" />
                    </RadialGradientBrush.GradientStops>

                </RadialGradientBrush>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="48"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Background="#9F161C46"  MouseMove="Grid_MouseMove" MouseLeftButtonUp="Grid_MouseLeftButtonUp" MouseLeftButtonDown="Grid_MouseLeftButtonDown">
                <ProgressBar Style="{DynamicResource ProgressBarStyle1}" x:Name="pb" Maximum="100"  Minimum="0" Value="{Binding ProcessNotify}" Background="Transparent" VerticalAlignment="Top" Height="32" BorderThickness="0" BorderBrush="Transparent" />
                <Label Content="{Binding Value,ElementName=pb,Converter={StaticResource dfc}}"  Foreground="{DynamicResource Window.Forground}"  Visibility="{Binding NotifyVisiblity}" HorizontalAlignment="Center" VerticalAlignment="Top" VerticalContentAlignment="Center"  FontSize="16"  Height="32"/>

                <Image Margin="5,0"   Height="16" HorizontalAlignment="Left" Width="24" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality" Stretch="Fill" Source="{Binding Icon,RelativeSource={RelativeSource AncestorType=Window}}"  />
                <Label Margin="30,0,115,0" VerticalContentAlignment="Center" Content="{local:ResMarker Title}" Foreground="{DynamicResource Window.Forground}"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button x:Name="minB" BorderThickness="0"  Click="minB_Click"   HorizontalAlignment="Left"  Margin="1,0,0,0"   VerticalAlignment="Stretch" Width="32"  >
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="/Image/minus.png" Height="12" RenderOptions.BitmapScalingMode="HighQuality" Stretch="Fill"/>
                                </StackPanel>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>

                    <Button x:Name="maxB" BorderThickness="0"  Click="maxB_Click" HorizontalAlignment="Left"  Margin="0,0,0,0"   VerticalAlignment="Stretch" Width="32"  >
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="/Image/max.png" Height="16" RenderOptions.BitmapScalingMode="HighQuality" Stretch="None" />
                                </StackPanel>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>

                    <Button x:Name="closeB" BorderThickness="0"   Click="closeB_Click"   HorizontalAlignment="Left"  Margin="0,0,0,0"   VerticalAlignment="Stretch" Width="32"  >
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="/Image/close.png" Height="16" RenderOptions.BitmapScalingMode="HighQuality" Stretch="None"/>
                                </StackPanel>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>
                </StackPanel>
            </Grid>
            <Border Grid.Row="1" BorderThickness="0,0,0,1" BorderBrush="LightGray" Background="#4F000000">
                <Grid>
                    <StackPanel Orientation="Horizontal">
                       
                        <Button BorderThickness="0"  ToolTip="{local:ResMarker Add_Tooltip}"  Command="{Binding AddCommand}" HorizontalAlignment="Left"  Margin="10,0,0,0" Height="32"  VerticalAlignment="Center" Width="80" >
                            <Button.ContentTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="/Image/add.png" Height="16" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                        <TextBlock Text="{local:ResMarker Add}"  FontWeight="Bold" VerticalAlignment="Center" Margin="5,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </Button.ContentTemplate>
                        </Button>

                        <Button BorderThickness="0" ToolTip="{local:ResMarker Manager_Tooltip}"   Command="{Binding ManagerCommand}" HorizontalAlignment="Left"  Margin="10,0,0,0" Height="32"  VerticalAlignment="Center" Width="80" >
                            <Button.ContentTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="/Image/systemmanager.png" Height="20" RenderOptions.BitmapScalingMode="HighQuality" />
                                        <TextBlock Text="{local:ResMarker Manager}"  FontWeight="Bold" VerticalAlignment="Center" Margin="5,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </Button.ContentTemplate>
                        </Button>

                        <Button BorderThickness="0" ToolTip="{local:ResMarker Start_Tooltip}"   Command="{Binding StartCommand}" HorizontalAlignment="Left"  Margin="10,0,0,0" Height="32"  VerticalAlignment="Center" Width="80" >
                            <Button.ContentTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="/Image/start.png" Height="20" RenderOptions.BitmapScalingMode="HighQuality" />
                                        <TextBlock Text="{local:ResMarker Start}"  FontWeight="Bold" VerticalAlignment="Center" Margin="5,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </Button.ContentTemplate>
                        </Button>

                        <Button BorderThickness="0"  ToolTip="{local:ResMarker Stop_Tooltip}"  Command="{Binding StopCommand}" HorizontalAlignment="Left"  Margin="10,0,0,0" Height="32"  VerticalAlignment="Center" Width="80" >
                            <Button.ContentTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="/Image/stop.png" Height="16" RenderOptions.BitmapScalingMode="HighQuality" />
                                        <TextBlock Text="{local:ResMarker Stop}"  FontWeight="Bold" VerticalAlignment="Center" Margin="5,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </Button.ContentTemplate>
                        </Button>

                        <Button BorderThickness="0"  ToolTip="{local:ResMarker HotReRun_Tooltip}"  Command="{Binding ReRunCommand}" HorizontalAlignment="Left"  Margin="10,0,0,0" Height="32"  VerticalAlignment="Center" Width="80" >
                            <Button.ContentTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="/Image/rerun.png" Height="16" RenderOptions.BitmapScalingMode="HighQuality" />
                                        <TextBlock Text="{local:ResMarker ReRun}"  FontWeight="Bold" VerticalAlignment="Center" Margin="5,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </Button.ContentTemplate>
                        </Button>
                        
                    </StackPanel>

                </Grid>
            </Border>
            <Grid Grid.Row="2"  Grid.IsSharedSizeScope="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="180" MinWidth="30" MaxWidth="1000"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TreeView x:Name="tv" Foreground="{DynamicResource Window.Forground}" ItemContainerStyle="{DynamicResource TreeViewItemStyle1}" ItemsSource="{Binding DatabaseItems}"  BorderThickness="0,0,1,0"  SelectedItemChanged="TreeView_SelectedItemChanged" Background="#7F000000">
                    <TreeView.Resources>
                        <ContextMenu x:Key="groupMenu">
                            <MenuItem Header="{local:ResMarker Add}"  Command="{Binding AddCommand}" />
                            <MenuItem Header="{local:ResMarker Remove}"  Command="{Binding RemoveCommand}" />
                        </ContextMenu>

                        <HierarchicalDataTemplate  DataType="{x:Type local:DatabaseViewModel}"  ItemsSource="{Binding Children}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="gg" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal" Height="24" >
                                <Image Focusable="False" Source="/Image/database.png" VerticalAlignment="Center" Margin="0,0,4,0" Height="16" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                                <TextBlock Foreground="{DynamicResource Window.Forground}" Text="{Binding Name}" VerticalAlignment="Center" />
                                    <TextBlock Margin="5,0" Visibility="{Binding IsEnable,Converter={StaticResource bivc}}" Foreground="Gray" Text="{local:ResMarker offline}" VerticalAlignment="Center" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,5,0">
                                    <Button Command="{Binding RemoveCommand}"  ToolTip="{local:ResMarker Remove}" Width="20" BorderThickness="0" VerticalAlignment="Center" Height="16" >
                                        <Button.ContentTemplate>
                                            <DataTemplate>
                                                <Image Source="/Image/close.png" Opacity="0.5" Height="10" Stretch="Uniform" RenderOptions.BitmapScalingMode="HighQuality" />
                                            </DataTemplate>
                                        </Button.ContentTemplate>
                                    </Button>

                                    <Button Command="{Binding ModifyCommand}" ToolTip="{local:ResMarker Modify}" Width="20" BorderThickness="0" VerticalAlignment="Center"  Height="16">
                                        <Button.ContentTemplate>
                                            <DataTemplate>
                                                <Image Source="/Image/modify.png" Height="10" Stretch="Uniform" RenderOptions.BitmapScalingMode="HighQuality" />
                                            </DataTemplate>
                                        </Button.ContentTemplate>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate  DataType="{x:Type local:RootTagGroupViewModel}"  ItemsSource="{Binding Children}">
                            <StackPanel Orientation="Horizontal" Height="24" IsHitTestVisible="{Binding IsEnable}" IsEnabled="{Binding IsEnable}">
                                <Image Focusable="False" Source="/Image/tags.png" VerticalAlignment="Center" Margin="0,0,4,0" Height="24" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                                <TextBlock Foreground="{DynamicResource Window.Forground}" Text="{Binding Name}" VerticalAlignment="Center" />
                                <TextBlock Margin="5,0" Visibility="{Binding IsEnable,Converter={StaticResource bivc}}" Foreground="Gray" Text="{local:ResMarker offline}" VerticalAlignment="Center" />
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate  DataType="{x:Type local:LogViewModel}"  ItemsSource="{Binding Children}">
                            <StackPanel Orientation="Horizontal" Height="24">
                                <Image Focusable="False" Source="/Image/logs.png" VerticalAlignment="Center" Margin="4,0,10,0" Height="14" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                                <TextBlock Foreground="{DynamicResource Window.Forground}" Text="{Binding Name}" VerticalAlignment="Center" />
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate  DataType="{x:Type local:AlarmNodeViewModel}"  ItemsSource="{Binding Children}">
                            <StackPanel Orientation="Horizontal" Height="24">
                                <Image Focusable="False" Source="/Image/alarm.png" VerticalAlignment="Center" Margin="4,0,10,0" Height="14" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                                <TextBlock Foreground="{DynamicResource Window.Forground}" Text="{Binding Name}" VerticalAlignment="Center" />
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>


                <GridSplitter VerticalAlignment="Stretch" Width="5" HorizontalAlignment="Right" Background="Transparent" />
                <ContentControl Grid.Column="1" Content="{Binding ContentViewModel}"/>

            </Grid>
        </Grid>
    </Border>
</Window>
